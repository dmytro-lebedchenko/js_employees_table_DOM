{"version":3,"sources":["scripts/main.js"],"names":["checkElement","table","document","querySelector","tableBody","tableHeader","numbers","letters","clickCounter","salaryToNumber","salary","split","join","stringToSalary","string","toString","replace","addEventListener","e","element","target","closest","index","querySelectorAll","indexOf","sortedRows","sort","a","b","elementA","children","innerText","elementB","toLowerCase","localeCompare","append","rowList","forEach","item","classList","remove","add","insertAdjacentHTML","pushNotification","title","description","type","notification","createElement","notificationChild","body","setAttribute","style","boxSizing","innerHTML","attributes","value","setTimeout","form","preventDefault","data","FormData","newEmployeeName","get","newEmployeePosition","newEmployeeOffice","newEmployeeAge","newEmployeeSalary","match","length","reset","editOption","cellValue","headersList","map","header","currentHeader","findIndex","headerIndex","cellIndex","options","option","width","offsetWidth","appendChild","focus","inputEditNotification","inputEditEvent","key"],"mappings":"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","file":"main.b4bc6212.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst tableBody = document.querySelector('tbody');\nconst tableHeader = document.querySelector('thead');\n\nconst numbers = '/^[0-9]+$/';\nconst letters = '[^a-zA-Z -]';\n\nlet clickCounter = 0;\nlet checkElement;\n\nfunction salaryToNumber(salary) {\n  return +(salary.split('$').join('').split(',').join(''));\n}\n\nfunction stringToSalary(string) {\n  return '$' + string.toString().replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1,');\n}\n\ntableHeader.addEventListener('click', (e) => {\n  const element = e.target.closest('th');\n  const cols = table.querySelectorAll('thead th');\n  const index = [...cols].indexOf(element);\n  const sortedRows = [...tableBody.querySelectorAll('tr')];\n\n  clickCounter++;\n\n  if (checkElement !== element) {\n    clickCounter = 1;\n  }\n\n  checkElement = element;\n\n  sortedRows.sort((a, b) => {\n    const elementA = a.children[index].innerText;\n    const elementB = b.children[index].innerText;\n\n    if (element.innerText.toLowerCase() === 'salary') {\n      return (clickCounter % 2 === 1)\n        ? salaryToNumber(elementA) - salaryToNumber(elementB)\n        : salaryToNumber(elementB) - salaryToNumber(elementA);\n    }\n\n    if (element) {\n      return (clickCounter % 2 === 1)\n        ? elementA.localeCompare(elementB)\n        : elementB.localeCompare(elementA);\n    }\n  });\n\n  tableBody.append(...sortedRows);\n});\n\ntableBody.addEventListener('click', (e) => {\n  const element = e.target.closest('tr');\n  const rowList = tableBody.querySelectorAll('tr');\n\n  [...rowList].forEach(item => {\n    item.classList.remove('active');\n  });\n\n  element.classList.add('active');\n});\n\ntable.insertAdjacentHTML('afterend', `\n  <form action=\"#\" class=\"new-employee-form\">\n    <label>\n      Name:\n      <input\n        name=\"name\"\n        type=\"text\"\n        data-qa=\"name\"\n      >\n    </label>\n\n    <label>\n      Position:\n      <input\n        name=\"position\"\n        type=\"text\"\n        data-qa=\"position\"\n      >\n    </label>\n\n    <label>\n      Office:\n      <select\n        name=\"office\"\n        type=\"text\"\n        data-qa=\"office\"\n      >\n        <option value=\"Tokyo\">Tokyo</option>\n        <option value=\"Singapore\">Singapore</option>\n        <option value=\"London\">London</option>\n        <option value=\"NewYork\">New York</option>\n        <option value=\"Edinburgh\">Edinburgh</option>\n        <option value=\"SanFrancisco\">San Francisco</option>\n      </select>\n    </label>\n\n    <label>\n      Age:\n      <input\n        type=\"number\"\n        name=\"age\"\n        data-qa=\"age\"\n      >\n    </label>\n\n    <label>\n      Salary:\n      <input\n        type=\"number\"\n        name=\"salary\"\n        data-qa=\"salary\"\n      >\n    </label>\n\n    <button type=\"submit\">\n      Save to table\n    </button>\n  </form>\n`);\n\nconst pushNotification = (title, description, type) => {\n  const notification = document.createElement('div');\n  const notificationChild = document.body.querySelectorAll('.notification');\n\n  document.body.append(notification);\n  notification.classList.add('notification', `${type}`);\n  notification.setAttribute('data-qa', 'notification');\n  notification.style.boxSizing = 'border-box';\n\n  notification.innerHTML = `\n    <h2 class=\"title\">\n      ${title}\n    </h2>\n    <p>\n      ${description}\n    </p>\n  `;\n\n  [...notificationChild].forEach((item, index) => {\n    item.attributes.style.value = `margin-right: ${(index + 1) * 25}vw`;\n  });\n\n  setTimeout(() => notification.remove(), 5000);\n};\n\nconst form = document.querySelector('.new-employee-form');\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const data = new FormData(form);\n  const newEmployeeName = data.get('name');\n  const newEmployeePosition = data.get('position');\n  const newEmployeeOffice = data.get('office');\n  const newEmployeeAge = data.get('age');\n  const newEmployeeSalary = data.get('salary');\n\n  if (newEmployeeName === null || newEmployeeName === '') {\n    pushNotification(\n      'Warning!',\n      'Name cannot be blank &#128521',\n      'warning');\n\n    return;\n  }\n\n  if (newEmployeeName.match(letters)) {\n    pushNotification(\n      'Oh no!',\n      'Invalid name given. Use only letters &#128556',\n      'error');\n\n    return;\n  }\n\n  if (newEmployeeName.length < 4) {\n    pushNotification(\n      'Oh no!',\n      'Name must be at least 4 letters long &#128556;',\n      'error');\n\n    return;\n  }\n\n  if (newEmployeePosition === null || newEmployeePosition === '') {\n    pushNotification(\n      'Warning!',\n      'Position cannot be blank &#128521',\n      'warning');\n\n    return;\n  }\n\n  if (newEmployeePosition.match(letters)) {\n    pushNotification(\n      'Oh no!',\n      'Invalid position given. Use only letters &#128556',\n      'error');\n\n    return;\n  }\n\n  if (newEmployeeAge === null || newEmployeeAge === '') {\n    pushNotification(\n      'Warning!',\n      'Age cannot be blank &#128521',\n      'warning');\n\n    return;\n  }\n\n  if (newEmployeeAge < 18 || newEmployeeAge > 90) {\n    pushNotification(\n      'Oh no!',\n      'Age must be between 18 and 90 &#128556;',\n      'error');\n\n    return;\n  }\n\n  if (newEmployeeSalary === null || newEmployeeSalary === '') {\n    pushNotification(\n      'Warning!',\n      'Salary cannot be blank &#128521',\n      'warning');\n\n    return;\n  }\n\n  tableBody.insertAdjacentHTML('beforeend', `\n    <tr>\n      <td>${newEmployeeName}</td>\n      <td>${newEmployeePosition}</td>\n      <td>${newEmployeeOffice}</td>\n      <td>${newEmployeeAge}</td>\n      <td>${stringToSalary(newEmployeeSalary)}</td>\n    </tr>\n  `);\n\n  pushNotification(\n    'Congratulations!',\n    'New employee has been added successfully &#129321;',\n    'success');\n\n  form.reset();\n});\n\ntableBody.addEventListener('dblclick', (e) => {\n  const element = e.target.closest('td');\n  const cellValue = element.innerText;\n\n  const headers = table.querySelectorAll('thead th');\n  const headersList = [...headers].map(header => header.innerText);\n  const currentHeader = headersList.findIndex(\n    (header, headerIndex) => headerIndex === element.cellIndex);\n\n  let editOption;\n\n  if (headersList[currentHeader].toLowerCase() === 'office') {\n    editOption = document.createElement('select');\n\n    const selectOffice = document.querySelector('form select');\n    const selectOptions = [...selectOffice.options].map(\n      option => option.innerText);\n\n    selectOptions.forEach(option =>\n      editOption.insertAdjacentHTML('beforeend', `\n        <option value=\"${option}\">${option}</option>\n    `));\n  } else {\n    editOption = document.createElement('input');\n  }\n\n  editOption.classList.add('cell-input');\n  editOption.style.width = `${element.offsetWidth - 18}px`;\n\n  element.innerText = '';\n  element.appendChild(editOption);\n  editOption.focus();\n\n  const inputEditNotification = () => {\n    if (headersList[currentHeader].toLowerCase() === 'name') {\n      if (editOption.value.match(letters) || editOption.value.length < 4) {\n        element.innerText = cellValue;\n\n        pushNotification(\n          'Oh no!',\n          'Invalid name given. Use only letters and at least 4 long &#128556',\n          'error');\n      } else {\n        element.innerText = editOption.value;\n\n        pushNotification(\n          'Success',\n          'Successfully changed &#129321;',\n          'success');\n      }\n    }\n\n    if (headersList[currentHeader].toLowerCase() === 'position') {\n      if (editOption.value.match(letters)\n        || editOption.value.length < 1) {\n        element.innerText = cellValue;\n\n        pushNotification(\n          'Oh no!',\n          'Invalid position given. Use only letters &#128556',\n          'error');\n      } else {\n        element.innerText = editOption.value;\n\n        pushNotification(\n          'Success',\n          'Successfully changed &#129321;',\n          'success');\n      }\n    }\n\n    if (headersList[currentHeader].toLowerCase() === 'office') {\n      if (!editOption.value) {\n        element.value = editOption.value;\n      } else {\n        element.innerText = editOption.value;\n      }\n\n      pushNotification(\n        'Success',\n        'Successfully changed &#129321;',\n        'success');\n    }\n\n    if (headersList[currentHeader].toLowerCase() === 'age') {\n      if (editOption.value.match(numbers)\n        || !editOption.value.match(letters)\n        || editOption.value < 18\n        || editOption.value > 90) {\n        element.innerText = cellValue;\n\n        pushNotification(\n          'Oh no!',\n          'Invalid age given. Use only numbers between 18 and 90 &#128556;',\n          'error');\n      } else {\n        element.innerText = editOption.value;\n\n        pushNotification(\n          'Success',\n          'Successfully changed &#129321;',\n          'success');\n      }\n    }\n\n    if (headersList[currentHeader].toLowerCase() === 'salary') {\n      if (editOption.value.match(numbers)\n        || !editOption.value.match(letters)) {\n        element.innerText = cellValue;\n\n        pushNotification(\n          'Oh no!',\n          'Invalid salary given. Use only numbers &#128556',\n          'error');\n      } else {\n        element.innerText = stringToSalary(editOption.value);\n\n        pushNotification(\n          'Success',\n          'Successfully changed &#129321;',\n          'success');\n      }\n    }\n  };\n\n  editOption.addEventListener('keydown', (inputEditEvent) => {\n    if (inputEditEvent.key !== 'Enter') {\n      return;\n    }\n\n    inputEditNotification();\n  });\n\n  editOption.addEventListener('blur', () => {\n    if (editOption.value.length === 0) {\n      editOption.innerText = cellValue;\n\n      pushNotification(\n        'Warning!',\n        'Input value cannot be blank &#128521',\n        'warning');\n    }\n\n    inputEditNotification();\n  });\n});\n"]}